{"version":3,"sources":["logo.svg","components/Speak/SpeakIcon.js","components/icon/icons.js","components/Speak/Speak.js","components/app/App.js","reportWebVitals.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","SpeakIcon","props","classes","className","IconButton","onClick","titleText","descriptionText","ut","SpeechSynthesisUtterance","speechSynthesis","speak","talkDirtyToMe","title","description","color","aria-label","maxWidth","media","height","Icon","Card","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","variant","component","speech","Speech","init","then","data","console","log","catch","e","error","App","Container","Paper","src","logo","alt","Button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","type","primary","main","light","dark","secondary","red","A400","background","default","overrides","MuiPaper","padding","backgroundColor","MuiButton","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.09e73e13.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n        margin: theme.spacing(1),\n        },\n    },\n}));\n\nfunction talkDirtyToMe(titleText, descriptionText) {\n    const ut = new SpeechSynthesisUtterance(titleText + \"\" + descriptionText);\n    speechSynthesis.speak(ut);\n}\n\nfunction SpeakIcon(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <IconButton onClick={() => talkDirtyToMe(props.title, props.description)} color=\"primary\" aria-label=\"read text\">\n                <VolumeUp />\n            </IconButton>\n        </div>\n    );\n}\n\nSpeakIcon.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string,\n    speak: PropTypes.object,\n};\n\nexport default SpeakIcon;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport SpeakIcon from '../Speak/SpeakIcon';\n\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    },\n});\n\nexport default function Icon(props) {\n    const classes = useStyles();\n\n    return (\n        //add the onclick to\n        <Card className={classes.root}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={props.image}\n                    title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {props.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {props.description}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <SpeakIcon speak={props.speech} title={props.title} description={props.description}/>\n        </Card>\n    );\n}\n\nIcon.propTypes = {\n    image: PropTypes.image,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    speech: PropTypes.object,\n};","import Speech from 'speak-tts';\n\n// Check for browser support and initilize the speech component\nconst speech = new Speech()\n\nspeech.init({\n    'volume': 1,\n    'rate': 1,\n    'pitch': 1,\n    'splitSentences': true,\n}).then((data) => {\n    // The \"data\" object contains the list of available voices and the voice synthesis params\n    console.log(\"Speech is ready, voices are available\", data)\n}).catch(e => {\n    console.error(\"An error occured while initializing : \", e)\n})\n\nexport { speech };","import logo from './../../logo.svg';\nimport './App.css';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Paper } from '@material-ui/core';\nimport React from 'react';\nimport Icon from '../icon/icons';\nimport { speech } from '../Speak/Speak';\n\nfunction App() {\n  return (\n    <Container maxWidth=\"sm\" className=\"App\">\n      <Paper>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          React with Material-UI :)\n        </Typography>\n        <Button variant=\"contained\" color=\"primary\">\n          Primary Button\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\">\n          Secondary Button yas\n        </Button>\n      </Paper>\n      <Icon title=\"Hallo\" description=\"Ik ben een hele mooie knaap.\" speech={speech}/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n// Our theme :D\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#61dafb',\n      light: '#61dafb',\n      dark: '#21a1c4',\n    },\n    secondary: {\n      main: '#b5ecfb',\n      light: '#61dafb',\n      dark: '#21a1c4',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#282c34',\n    },\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        padding: '20px 10px',\n        margin: '10px',\n        backgroundColor: '#fff', // 5d737e\n      },\n    },\n    MuiButton: {\n      root: {\n        margin: '5px',\n      },\n    },\n  },\n});\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}